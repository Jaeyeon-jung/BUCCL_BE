# Generated by Django 4.1.5 on 2025-05-22 10:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=100)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='class_products/')),
                ('original_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('discount_rate', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '클래스 상품',
                'verbose_name_plural': '클래스 상품 관리',
            },
        ),
        migrations.CreateModel(
            name='ClassReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '클래스 리뷰',
                'verbose_name_plural': '클래스 리뷰 관리',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='locations/')),
                ('operating_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('pricing', models.CharField(blank=True, max_length=255, null=True)),
                ('facilities', models.JSONField(blank=True, default=list, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '장소',
                'verbose_name_plural': '장소 관리',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[('LESSON', '레슨'), ('CLASS', '클래스'), ('TRAVEL', '여행'), ('PRODUCT', '일반 상품')], max_length=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_amount', models.DecimalField(decimal_places=0, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', '결제 대기'), ('PAYMENT_ATTEMPTED', '결제 시도 중'), ('PAYMENT_PROCESSING', '결제 처리 중'), ('CONFIRMED', '확정됨'), ('CANCELLED', '취소됨'), ('COMPLETED', '완료됨'), ('PAYMENT_FAILED', '결제 실패')], db_index=True, default='PENDING', max_length=20)),
                ('order_details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_payment_attempt_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '주문',
                'verbose_name_plural': '주문 관리',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.PositiveIntegerField(db_index=True, default=1, help_text='동일 주문 내 결제 시도 횟수 (1부터 자동)')),
                ('amount', models.DecimalField(decimal_places=0, max_digits=10)),
                ('status', models.CharField(choices=[('AUTH_REQUESTED', '인증 요청됨'), ('AUTH_SUCCESS', '인증 성공'), ('AUTH_FAILED', '인증 실패'), ('CAPTURE_REQUESTED', '승인 요청됨'), ('CAPTURE_SUCCESS', '승인 성공 (결제 완료)'), ('CAPTURE_FAILED', '승인 실패'), ('CANCEL_REQUESTED', '취소 요청됨'), ('CANCEL_SUCCESS', '취소 성공'), ('CANCEL_FAILED', '취소 실패'), ('REFUNDED', '환불됨'), ('SYSTEM_ERROR', '시스템 오류')], db_index=True, max_length=20)),
                ('payment_method_type', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_method_detail', models.CharField(blank=True, max_length=100, null=True)),
                ('pg_provider', models.CharField(default='nicepay', max_length=50)),
                ('moid', models.CharField(db_index=True, max_length=100, unique=True)),
                ('tid', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auth_requested_at', models.DateTimeField(blank=True, null=True)),
                ('auth_completed_at', models.DateTimeField(blank=True, null=True)),
                ('capture_requested_at', models.DateTimeField(blank=True, null=True)),
                ('capture_completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_failed_at', models.DateTimeField(blank=True, null=True)),
                ('error_code', models.CharField(blank=True, max_length=50, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('payment_method_details', models.JSONField(blank=True, default=dict)),
                ('event_timestamps', models.JSONField(blank=True, default=dict)),
                ('error_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': '결제 주요 정보',
                'verbose_name_plural': '결제 주요 정보 관리',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentAuthRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_name', models.CharField(max_length=100, null=True)),
                ('amt', models.DecimalField(decimal_places=0, max_digits=10)),
                ('mid', models.CharField(max_length=50)),
                ('moid', models.CharField(max_length=100)),
                ('sign_data', models.TextField(null=True)),
                ('pay_method', models.CharField(max_length=20)),
                ('buyer_info', models.JSONField(default=dict)),
                ('amount_details', models.JSONField(default=dict)),
                ('ui_options', models.JSONField(default=dict)),
                ('payment_config', models.JSONField(default=dict)),
                ('raw_data', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'PG 인증 요청 정보',
                'verbose_name_plural': 'PG 인증 요청 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentAuthResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_code', models.CharField(blank=True, max_length=10, null=True)),
                ('result_msg', models.TextField(blank=True, null=True)),
                ('auth_token', models.CharField(blank=True, max_length=100, null=True)),
                ('pay_method', models.CharField(blank=True, max_length=20, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('moid', models.CharField(blank=True, max_length=100, null=True)),
                ('amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('req_reserved', models.TextField(blank=True, null=True)),
                ('tx_tid', models.CharField(blank=True, max_length=100, null=True)),
                ('next_app_url', models.URLField(blank=True, max_length=400, null=True)),
                ('net_cancel_url', models.URLField(blank=True, max_length=400, null=True)),
                ('auth_date', models.DateTimeField(blank=True, null=True)),
                ('card_code', models.CharField(blank=True, max_length=10, null=True)),
                ('card_name', models.CharField(blank=True, max_length=50, null=True)),
                ('card_type', models.CharField(blank=True, max_length=10, null=True)),
                ('pg_tid', models.CharField(blank=True, max_length=100, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 인증 응답 정보',
                'verbose_name_plural': 'PG 인증 응답 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentCancel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancel_amount', models.DecimalField(decimal_places=0, max_digits=10)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(verbose_name='취소 사유')),
                ('is_partial_cancel', models.BooleanField(default=False)),
                ('remain_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('pg_cancel_tid', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('AUTH_REQUESTED', '인증 요청됨'), ('AUTH_SUCCESS', '인증 성공'), ('AUTH_FAILED', '인증 실패'), ('CAPTURE_REQUESTED', '승인 요청됨'), ('CAPTURE_SUCCESS', '승인 성공 (결제 완료)'), ('CAPTURE_FAILED', '승인 실패'), ('CANCEL_REQUESTED', '취소 요청됨'), ('CANCEL_SUCCESS', '취소 성공'), ('CANCEL_FAILED', '취소 실패'), ('REFUNDED', '환불됨'), ('SYSTEM_ERROR', '시스템 오류')], db_index=True, max_length=20, null=True)),
                ('cancel_details', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': '결제 취소 정보',
                'verbose_name_plural': '결제 취소 정보 관리',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentCancelRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', models.CharField(blank=True, max_length=100, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('moid', models.CharField(blank=True, max_length=100, null=True)),
                ('cancel_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('cancel_msg', models.TextField(blank=True, null=True)),
                ('partial_cancel_code', models.CharField(blank=True, max_length=20, null=True)),
                ('edi_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sign_data', models.TextField(blank=True, null=True)),
                ('supply_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('goods_vat', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('service_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('tax_free_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('char_set', models.CharField(blank=True, max_length=20, null=True)),
                ('cart_type', models.CharField(blank=True, max_length=20, null=True)),
                ('edi_type', models.CharField(blank=True, max_length=20, null=True)),
                ('mall_reserved', models.TextField(blank=True, null=True)),
                ('refund_acct_no', models.CharField(blank=True, max_length=50, null=True)),
                ('refund_bank_cd', models.CharField(blank=True, max_length=20, null=True)),
                ('refund_acct_nm', models.CharField(blank=True, max_length=50, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 취소 요청 정보',
                'verbose_name_plural': 'PG 취소 요청 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentCancelResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_code', models.CharField(blank=True, max_length=10, null=True)),
                ('result_msg', models.TextField(blank=True, null=True)),
                ('error_cd', models.CharField(blank=True, max_length=10, null=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('cancel_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('moid', models.CharField(blank=True, max_length=100, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('pay_method', models.CharField(blank=True, max_length=20, null=True)),
                ('tid', models.CharField(blank=True, max_length=100, null=True)),
                ('otid', models.CharField(blank=True, max_length=100, null=True)),
                ('cancel_date', models.CharField(blank=True, max_length=10, null=True)),
                ('cancel_time', models.CharField(blank=True, max_length=10, null=True)),
                ('cancel_num', models.CharField(blank=True, max_length=50, null=True)),
                ('remain_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('mall_reserved', models.TextField(blank=True, null=True)),
                ('coupon_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('clickpay_cl', models.CharField(blank=True, max_length=20, null=True)),
                ('multi_card_acqu_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('multi_point_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('multi_coupon_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('multi_rcpt_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 취소 응답 정보',
                'verbose_name_plural': 'PG 취소 응답 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentCaptureRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', models.CharField(blank=True, max_length=100, null=True)),
                ('auth_token', models.CharField(blank=True, max_length=100, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('edi_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sign_data', models.TextField(blank=True, null=True)),
                ('char_set', models.CharField(blank=True, max_length=20, null=True)),
                ('edi_type', models.CharField(blank=True, max_length=20, null=True)),
                ('mall_reserved', models.TextField(blank=True, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 승인 요청 정보',
                'verbose_name_plural': 'PG 승인 요청 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentCaptureResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_code', models.CharField(blank=True, max_length=10, null=True)),
                ('result_msg', models.TextField(blank=True, null=True)),
                ('amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('moid', models.CharField(blank=True, max_length=100, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('buyer_email', models.CharField(blank=True, max_length=100, null=True)),
                ('buyer_tel', models.CharField(blank=True, max_length=20, null=True)),
                ('buyer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('goods_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tid', models.CharField(blank=True, max_length=100, null=True)),
                ('auth_code', models.CharField(blank=True, max_length=50, null=True)),
                ('auth_date', models.CharField(blank=True, max_length=20, null=True)),
                ('auth_datetime', models.DateTimeField(blank=True, null=True)),
                ('pay_method', models.CharField(blank=True, max_length=20, null=True)),
                ('cart_data', models.TextField(blank=True, null=True)),
                ('mall_reserved', models.TextField(blank=True, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('rcpt_type', models.CharField(blank=True, max_length=20, null=True)),
                ('rcpt_tid', models.CharField(blank=True, max_length=100, null=True)),
                ('rcpt_auth_code', models.CharField(blank=True, max_length=50, null=True)),
                ('vbank_num', models.CharField(blank=True, max_length=30, null=True)),
                ('vbank_exp_date', models.CharField(blank=True, max_length=10, null=True)),
                ('vbank_exp_time', models.CharField(blank=True, max_length=10, null=True)),
                ('card_acquirer_code', models.CharField(blank=True, max_length=10, null=True)),
                ('card_acquirer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 승인 응답 정보',
                'verbose_name_plural': 'PG 승인 응답 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentNetCancelRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tid', models.CharField(blank=True, max_length=100, null=True)),
                ('auth_token', models.CharField(blank=True, max_length=100, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('edi_date', models.CharField(blank=True, max_length=20, null=True)),
                ('net_cancel', models.CharField(blank=True, max_length=5, null=True)),
                ('sign_data', models.TextField(blank=True, null=True)),
                ('char_set', models.CharField(blank=True, max_length=20, null=True)),
                ('edi_type', models.CharField(blank=True, max_length=20, null=True)),
                ('mall_reserved', models.TextField(blank=True, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 망 취소 요청 정보',
                'verbose_name_plural': 'PG 망 취소 요청 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='PaymentNetCancelResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_code', models.CharField(blank=True, max_length=10, null=True)),
                ('result_msg', models.TextField(blank=True, null=True)),
                ('error_cd', models.CharField(blank=True, max_length=10, null=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('cancel_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('mid', models.CharField(blank=True, max_length=50, null=True)),
                ('moid', models.CharField(blank=True, max_length=100, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('pay_method', models.CharField(blank=True, max_length=20, null=True)),
                ('tid', models.CharField(blank=True, max_length=100, null=True)),
                ('cancel_date', models.CharField(blank=True, max_length=10, null=True)),
                ('cancel_time', models.CharField(blank=True, max_length=10, null=True)),
                ('cancel_num', models.CharField(blank=True, max_length=50, null=True)),
                ('remain_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('mall_reserved', models.TextField(blank=True, null=True)),
                ('coupon_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('clickpay_cl', models.CharField(blank=True, max_length=20, null=True)),
                ('multi_card_acqu_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('multi_point_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('multi_coupon_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('multi_rcpt_amt', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'PG 망 취소 응답 정보',
                'verbose_name_plural': 'PG 망 취소 응답 정보 관리',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('attributes', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '통합 상품',
                'verbose_name_plural': '통합 상품 관리',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='class_products/images/')),
                ('is_detail', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '상품 이미지',
                'verbose_name_plural': '상품 이미지 관리',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('requires_schedule', models.BooleanField(default=False)),
                ('has_sessions', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '상품 유형',
                'verbose_name_plural': '상품 유형 관리',
            },
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='review_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '리뷰 이미지',
                'verbose_name_plural': '리뷰 이미지 관리',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': '스포츠 종류',
                'verbose_name_plural': '스포츠 종류 관리',
            },
        ),
        migrations.CreateModel(
            name='TravelProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('guide', models.CharField(max_length=100)),
                ('requirements', models.TextField()),
                ('max_participants', models.IntegerField()),
                ('detailed_content', models.TextField()),
                ('price', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='비용')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '여행 상품',
                'verbose_name_plural': '여행 상품 관리',
            },
        ),
    ]
